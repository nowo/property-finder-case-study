// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/product/repository_product/repository_product.go

// Package repository_mocks is a generated GoMock package.
package repository_mocks

import (
	product "property-finder-go-bootcamp-homework/internal/domain/product"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIProductRepository is a mock of IProductRepository interface.
type MockIProductRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIProductRepositoryMockRecorder
}

// MockIProductRepositoryMockRecorder is the mock recorder for MockIProductRepository.
type MockIProductRepositoryMockRecorder struct {
	mock *MockIProductRepository
}

// NewMockIProductRepository creates a new mock instance.
func NewMockIProductRepository(ctrl *gomock.Controller) *MockIProductRepository {
	mock := &MockIProductRepository{ctrl: ctrl}
	mock.recorder = &MockIProductRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIProductRepository) EXPECT() *MockIProductRepositoryMockRecorder {
	return m.recorder
}

// GetProductByID repository_mocks base method.
func (m *MockIProductRepository) GetProductByID(id uint) (product.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProductByID", id)
	ret0, _ := ret[0].(product.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProductByID indicates an expected call of GetProductByID.
func (mr *MockIProductRepositoryMockRecorder) GetProductByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProductByID", reflect.TypeOf((*MockIProductRepository)(nil).GetProductByID), id)
}

// ShowAllProducts repository_mocks base method.
func (m *MockIProductRepository) ShowAllProducts() ([]product.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowAllProducts")
	ret0, _ := ret[0].([]product.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShowAllProducts indicates an expected call of ShowAllProducts.
func (mr *MockIProductRepositoryMockRecorder) ShowAllProducts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowAllProducts", reflect.TypeOf((*MockIProductRepository)(nil).ShowAllProducts))
}

// UpdateProductQuantity repository_mocks base method.
func (m *MockIProductRepository) UpdateProductQuantity(id uint, quantity int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProductQuantity", id, quantity)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateProductQuantity indicates an expected call of UpdateProductQuantity.
func (mr *MockIProductRepositoryMockRecorder) UpdateProductQuantity(id, quantity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProductQuantity", reflect.TypeOf((*MockIProductRepository)(nil).UpdateProductQuantity), id, quantity)
}
